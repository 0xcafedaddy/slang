Implement:
  ✔ E3-style notes @done (18-05-31 18:47)
  ☐ scene restarting at the next interval?
  ✘ randoms @cancelled (18-06-01 16:24)
  ✔ polyblocks @done (18-05-31 20:00)
    ✔ cool yeah that could be a class? @done (18-05-31 20:00)
    ✔ the schedule fn could link together the blocks for each note triggered @done (18-05-31 20:00)
  ✘ variables @cancelled (18-06-01 16:24)
  ✔ more blocks @done (18-09-29 11:49)
    ✔ pan @done (18-06-03 08:39)
    ✔ gain @done (18-06-03 08:40)
  ✔ sharp notes @done (18-06-02 11:41)
  ✔ Lists @done (18-06-02 11:41)
    ✔ step 1: discrete list as soundArgument @done (18-06-01 17:07)
    ✔ step 2: range as soundArgument @done (18-06-01 17:07)
    ✔ step 3: Function as sound argument @done (18-06-02 07:14)
    ✔ step 4: List/Function classes @done (18-06-02 11:41)
  ✔ parse functions to make scheduler patterns @done (18-06-02 08:12)
  ✔ envelope causes problems with the chain @done (18-06-04 16:41)
    ✔ osc needs to know what its end time will be, which the envelope defines via release @done (18-06-04 16:41)
    ✘ filter needs to set the peakLevel of the env (otherwise it would work) @cancelled (18-06-16 08:17)
    ✔ use a function call instead: `(envelope (osc [sin tri]) .1 0 1 .2) @done (18-06-04 16:41)
  ✔ split environment into a different file `editor.js` @done (18-06-16 09:18)
  ✔ save code in localstorage on run @done (18-06-16 09:18)
  ✘ start/stop button? @cancelled (18-06-16 09:18)

Design:
  ✔ clojure-style parens @done (18-06-01 16:38)
  ✔ get rid of pattern definitions @done (18-06-02 07:40)
  ✔ lists and ranges @done (18-06-02 07:15)
    ✔ List class can hold a finite list or a range @done (18-06-02 07:14)
    ✔ lists won't be used outside of functions! I think @done (18-06-02 07:15)
  ✘ could LFOs be functions with forward-pointing arguments? @cancelled (18-09-29 11:49)
    ✘ @synth ~ (lfo osc.frequency 2 100) ~ (osc tri) + (filter lp 8) @cancelled (18-09-29 11:49)


todos:
  ✔ get rid of commas as separators @done (18-06-02 07:15)
  ✔ expose errors @done (18-09-29 15:44)
  ✔ play/pause button @done (18-09-29 15:44)
  ✔ drums @done (18-09-29 11:48)
    ✔ @percussion (drums <set>) + (filter lp 10) @done (18-09-29 11:48)
    ✔ play @percussion (rhythm [8n]) (notes [0 1 2 3 4 5]) @done (18-09-29 11:48)
    ✔ lazy load when drum is first used? @done (18-09-29 11:48)
    ✔ 0 - 11 for now, maybe mod% so that any number hits a sound @done (18-09-29 11:48)



